---
title: "Attention Postprocessing"
format: html
editor: visual
---

```{r, echo=FALSE, message=FALSE}
rm(list = ls())

library(here)
library(tidyr)
library(dplyr)
library(jsonlite)

source("../utils/esm_processors.R")
```

## Set up

I define the pipeline to read in the ESM-2 attention scores using functions from esm_processors.R. This method will only be used for the small dataset.

```{r}
preprocesAttnLayer <- function(esm_output_path, accessions, layers, method_attn, scr_include = TRUE){
### Preprocess multiple attention layers with different methods.  
  
  # Decide weather to work with raw or normalized attention. 
   if (method_attn == "norm"){
     raw = FALSE
     format <- "norm"
   } else {
     raw = TRUE
     format <- "raw"
   }
  
  # A tibble to store the results.
  attn_all_layers <- tibble()
  
  # Extract the data.
  for (i in layers){
    
    layer <- i

    if (isTRUE(scr_include)){
      # Read the data for relevant layer.
      attn <- readAttnLayer(layer, 5, esm_output_path, raw)
    } else {
      # Define file.
      json_file_bio <- paste(esm_output_path,
                             "attention/",
                             format,
                             "/layer_",
                             str_pad(layer, width = 2, pad = "0"),
                             "_attn_",
                             format,
                             ".json",
                             sep = "")
      
      # Read data.
      attn_bio <- readJSON(json_file_bio)
      attn <- list(bio = attn_bio)
    }
    
    # Convert biological attention. 
    attn_bio <- attn$bio |>
      lapply(function(matrix){
        df <- tibble(matrix)
        colnames(df) <- "bio_attn"
        df <- df |>
          mutate(position = as.numeric(rownames(df)))
        return(df)})
    
    # Add accession and layer info.
    attn_bio <- Map(function(bio, acc){
      df_acc <- bio |>
          mutate(accession = acc,
                 layer = layer) |>
        relocate(accession, layer, position)
        return(df_acc)
      }, attn_bio, accessions)
    
    if (isTRUE(scr_include)){
      # Modify and summarize the attention from scrambled sequences.
      attn_scr <- attn$scr |> 
        summarizeScrSignal()
      
      # Combine the biological and scramble attention weights.
      attn_combined <- Map(function(bio, scr){
        combined <- left_join(bio, scr, by = "position")
        return(combined)},
        attn_bio, attn_scr) |>
        bind_rows() |>
        mutate(bio_attn_Z = (bio_attn - scr_attn_mean) / scr_attn_sd) |>
        relocate(bio_attn_Z, .after = bio_attn)
    } else {
      attn_combined <- attn_bio
    }
      
    # Combine the results across layers.
    attn_all_layers <- bind_rows(attn_all_layers, attn_combined)
      
    print(paste("Layer", i, "done.", sep = " "))
  }
  
  return(attn_all_layers)
}
```

## Process attention scores across datasets

First, I read the ESM-2 results for the small subset with 100 sequences. Here, I wish to save the results from both the raw attention scores before applying the softmax function. Furthermore, this dataset has scrambled sequences, which we use for normalization of the attention signal. I will also distinguish between summarizing the attention per layer by taken the average across heads vs. the 90th quantile of the 20 heads (corresponding to the second largest value).

```{r}
# Define layer range.
layers <- c(1:33)

# Data path
data_path_00100 <- here("data/subset_00100")

# Read the accessions.
acc_00100 <- read.table(file = file.path(data_path_00100, "additional/accessions.txt")) |>
  pull() |>
  as.list()

# Process ESM-2 attention scores.
attn_raw_headMean_colMean <- preprocesAttnLayer(file.path(data_path_00100, "esm_output_headMean_colMean/"),
                                                acc_00100,
                                                layers,
                                                method_attn = "raw",
                                                scr_include = TRUE)

attn_raw_headMean_colQuan90 <- preprocesAttnLayer(file.path(data_path_00100, "esm_output_headMean_colQuan90/"),
                                                  acc_00100,
                                                  layers,
                                                  method_attn = "raw",
                                                  scr_include = TRUE)

attn_raw_headQuan90_colMean <- preprocesAttnLayer(file.path(data_path_00100, "esm_output_headQuan90_colMean/"),
                                                  acc_00100,
                                                  layers,
                                                  method_attn = "raw",
                                                  scr_include = TRUE)

attn_raw_headQuan90_colQuan90 <- preprocesAttnLayer(file.path(data_path_00100, "esm_output_headQuan90_colQuan90/"),
                                                    acc_00100,
                                                    layers,
                                                    method_attn = "raw",
                                                    scr_include = TRUE)

# Save the results.
saveRDS(attn_raw_headMean_colMean, file = file.path(data_path_00100, "esm_processed/attn_raw_headMean_colMean.rds"))
saveRDS(attn_raw_headMean_colQuan90, file = file.path(data_path_00100, "esm_processed/attn_raw_headMean_colQuan90.rds"))
saveRDS(attn_raw_headQuan90_colMean, file = file.path(data_path_00100, "esm_processed/attn_raw_headQuan90_colMean.rds"))
saveRDS(attn_raw_headQuan90_colQuan90, file = file.path(data_path_00100, "esm_processed/attn_raw_headQuan90_colQuan90.rds"))
```
