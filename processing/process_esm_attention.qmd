---
title: "Attention Postprocessing"
format: html
editor: visual
---

```{r, echo=FALSE, message=FALSE}
rm(list = ls())

library(here)
library(tidyr)
library(dplyr)
library(jsonlite)

source("utils/esm_processors.R")
```

## Set up

I define the pipeline to read in the ESM-2 attention scores using functions from esm_processors.R.

```{r}
preprocesAttnLayer <- function(esm_output_path, accessions, layers, method_attn, scr_include = TRUE){
### Preprocess multiple attention layers with different methods.  
  
  # Decide weather to work with raw or normalized attention. 
   if (method_attn == "norm"){
     raw = FALSE
     format <- "norm"
   } else {
     raw = TRUE
     format <- "raw"
   }
  
  # A tibble to store the results.
  attn_all_layers <- tibble()
  
  # Extract the data.
  for (i in layers){
    
    layer <- i

    if (isTRUE(scr_include)){
      # Read the data for relevant layer.
      attn <- readAttnLayer(layer, 5, esm_output_path, raw)
    } else {
      # Define file.
      json_file_bio <- paste(esm_output_path,
                             "attention/",
                             format,
                             "/layer_",
                             str_pad(layer, width = 2, pad = "0"),
                             "_attn_",
                             format,
                             ".json",
                             sep = "")
      
      # Read data.
      attn_bio <- readJSON(json_file_bio)
      attn <- list(bio = attn_bio)
    }
    
    # Convert biological attention. 
    attn_bio <- attn$bio |>
      lapply(function(matrix){
        df <- tibble(matrix)
        colnames(df) <- "bio_attn"
        df <- df |>
          mutate(position = as.numeric(rownames(df)))
        return(df)})
    
    # Add accession and layer info.
    attn_bio <- Map(function(bio, acc){
      df_acc <- bio |>
          mutate(accession = acc,
                 layer = layer) |>
        relocate(accession, layer, position)
        return(df_acc)
      }, attn_bio, accessions)
    
    if (isTRUE(scr_include)){
      # Modify and summarize the attention from scrambled sequences.
      attn_scr <- attn$scr |> 
        summarizeScrSignal()
      
      # Combine the biological and scramble attention weights.
      attn_combined <- Map(function(bio, scr){
        combined <- left_join(bio, scr, by = "position")
        return(combined)},
        attn_bio, attn_scr) |>
        bind_rows() |>
        mutate(bio_attn_Z = (bio_attn - scr_attn_mean) / scr_attn_sd) |>
        relocate(bio_attn_Z, .after = bio_attn)
    } else {
      attn_combined <- attn_bio
    }
      
    # Combine the results across layers.
    attn_all_layers <- bind_rows(attn_all_layers, attn_combined)
      
    print(paste("Layer", i, "done.", sep = " "))
  }
  
  return(attn_all_layers)
}
```

## Process attention scores across datasets

The available information between the complete dataset and the subsets vary. First, I read the ESM-2 results for the small subset with 100 sequences. Here, I wish to save the results from both the raw attention scores and the normalized scores after applying the softmax function. Furthermore, this dataset has scrambled sequences, which we use for normalization of the attention signal. 

```{r}
# Define layer range.
layers <- c(1:33)

# Data path
data_path_00100 <- here("data/subset_00100")

# Read the accessions.
acc_00100 <- read.table(file = file.path(data_path_00100, "additional/accessions.txt")) |>
  pull() |>
  as.list()

# Process ESM-2 attention scores.
attn_raw_00100 <- preprocesAttnLayer(file.path(data_path_00100, "esm_output/"), 
                                     acc_00100,
                                     layers,
                                     method_attn = "raw",
                                     scr_include = TRUE)

attn_norm_00100 <- preprocesAttnLayer(file.path(data_path_00100, "esm_output/"),
                                      acc_00100,
                                      layers,
                                      method_attn = "norm",
                                      scr_include = TRUE)

# Save the results.
saveRDS(attn_raw_00100, file = file.path(data_path_00100, "esm_processed/attn_raw.rds"))
saveRDS(attn_norm_00100, file = file.path(data_path_00100, "esm_processed/attn_norm.rds"))
```

For the subset with 1000 sequences, we only got the raw attention scores including scrambled sequences to process. 

```{r}
# Data path
data_path_01000 <- here("data/subset_01000")

# Read the accessions.
acc_01000 <- read.table(file = file.path(data_path_01000, "additional/accessions.txt")) |>
  pull() |>
  as.list()

# Process ESM-2 attention scores.
attn_raw_01000 <- preprocesAttnLayer(file.path(data_path_01000, "esm_output/"), 
                                     acc_01000,
                                     layers,
                                     method_attn = "raw",
                                     scr_include = TRUE)

# Save the results.
saveRDS(attn_raw_00100, file = file.path(data_path_01000, "esm_processed/attn_raw.rds"))
```

Finally, we process the raw attention scores from the complete dataset of ~ 20.000 sequences. I did not scramble the sequences for the full set, and I will only extracted the raw attention scores.

```{r}
# Data path
data_path_complete <- here("data/complete")

# Read the accessions.
acc_complete <- read.table(file = file.path(data_path_complete, "additional/accessions_sp_cropped.txt")) |>
  pull() |>
  as.list()

# Process ESM-2 attention scores.
attn_raw_complete <- preprocesAttnLayer(file.path(data_path_complete, "esm_output/"),
                                        acc_complete,
                                        layers,
                                        method_attn = "raw",
                                        scr_include = FALSE)

# Save the results.
saveRDS(attn_raw_complete, file = file.path(data_path_complete, "esm_processed/attn_raw.rds"))
```
